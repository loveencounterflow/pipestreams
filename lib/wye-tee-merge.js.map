{
  "version": 3,
  "file": "wye-tee-merge.js",
  "sourceRoot": "..",
  "sources": [
    "src/wye-tee-merge.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/WYE-TEE-MERGE'\n# log                       = CND.get_logger 'plain',     badge\n# info                      = CND.get_logger 'info',      badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# alert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\n# warn                      = CND.get_logger 'warn',      badge\n# help                      = CND.get_logger 'help',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# echo                      = CND.echo.bind CND\n{ jr }                    = CND\nmux                       = require 'pull-mux' ### https://github.com/nichoth/pull-mux ###\ndefer                     = setImmediate\n\n#-----------------------------------------------------------------------------------------------------------\n@$tee = ( stream ) ->\n  ### **NB** that in contradistinction to `pull-tee`, you can only divert to a single by-stream with each\n  call to `PS.$tee` ###\n  # R = if ( CND.isa_list stream_or_pipeline ) then ( pull stream_or_pipeline ) else stream_or_pipeline\n  return ( require 'pull-tee' ) stream\n\n#-----------------------------------------------------------------------------------------------------------\n@$merge = ( sources... ) ->\n  #.........................................................................................................\n  $_mux = ( sources... ) =>\n    R = {}\n    R[ idx ] = source for source, idx in sources\n    return mux R\n  #.........................................................................................................\n  $_demux = => @$map ( [ k, v, ] ) -> v\n  #.........................................................................................................\n  pipeline  = []\n  pipeline.push $_mux sources...\n  pipeline.push $_demux()\n  return @pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@$wye = ( bystream ) ->\n  pair              = ( require 'pull-pair' )()\n  pushable          = @new_push_source()\n  subline           = []\n  byline            = []\n  end_sym           = Symbol 'end'\n  bystream_ended    = false\n  substream_ended   = false\n  #.........................................................................................................\n  subline.push pair.source\n  subline.push @$ { last: end_sym, }, ( d, send ) ->\n    if d is end_sym\n      substream_ended = true\n      pushable.end() if bystream_ended\n    else\n      pushable.send d\n  subline.push @$drain()\n  #.........................................................................................................\n  byline.push bystream\n  byline.push @$ { last: end_sym, }, ( d, send ) ->\n    if d is end_sym\n      bystream_ended = true\n      pushable.end() if substream_ended\n    else\n      send d\n  #.........................................................................................................\n  @pull subline...\n  confluence = @$merge pushable, @pull byline...\n  return { sink: pair.sink, source: confluence, }\n\n\n\n"
  ]
}