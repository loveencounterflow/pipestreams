{
  "version": 3,
  "file": "various-pull-streams.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/various-pull-streams.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/EXPERIMENTS/VARIOUS-PULL-STREAMS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n#...........................................................................................................\nafter                     = ( dts, f ) -> setTimeout f, dts * 1000\n{ jr }                    = CND\n\n# https://pull-stream.github.io/#pull-through\n# nope https://github.com/dominictarr/pull-flow (https://github.com/pull-stream/pull-stream/issues/4)\n\n# https://github.com/pull-stream/pull-cont\n# https://github.com/pull-stream/pull-defer\n# https://github.com/scrapjs/pull-imux\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_merge_1 = ->\n  ### https://github.com/pull-stream/pull-merge ###\n  pull      = require 'pull-stream'\n  merge     = require 'pull-merge'\n  pipeline  = []\n  # pipeline.push merge ( pull.values [ 1, 5, 6, ] ), ( pull.values [ 2, 4, 7, ] )\n  # pipeline.push merge ( pull.values [ 1, 5, 6, ] ), ( pull.values [ 2, 4, 7, 10, 11, 12, ] )\n  # pipeline.push merge ( pull.values [ 1, 5, 6, ] ), ( pull.values [] )\n  # pipeline.push merge ( pull.values [ 1, 5, 6, ] ), ( pull.values [ 1, 5, 6, ] )\n  # pipeline.push merge ( pull.values [ [1], [5], [6], ] ), ( pull.values [ [1], [5], [6], [7], ] )\n  pipeline.push merge ( pull.values [ 1, 5, 6, ] ), ( pull.values [ 1, 5, 6, ] ), ( a, b ) -> -1\n  pipeline.push pull.collect ( error, collector ) ->\n    throw error if error?\n    help collector\n  pull pipeline...\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nnew_async_source = ( name ) ->\n    source    = PS.new_push_source()\n    pipeline  = []\n    pipeline.push source\n    pipeline.push PS.$watch ( d ) -> urge name, jr d\n    R         = PS.pull pipeline...\n    R.push    = ( x ) -> source.push x\n    R.end     = -> source.end()\n    return R\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_merge_async_sources = ->\n  ### won't take all inputs from both sources ###\n  merge     = require 'pull-merge'\n  source_1 = new_async_source 's1'\n  source_2 = new_async_source 's2'\n  return new Promise ( resolve ) ->\n    pipeline  = []\n    pipeline.push merge source_2, source_1, ( a, b ) -> -1\n    pipeline.push PS.$watch ( d ) -> help '-->', jr d\n    pipeline.push PS.$drain ->\n      help 'ok'\n      resolve null\n    PS.pull pipeline...\n    after 0.1, -> source_2.push 4\n    after 0.2, -> source_2.push 5\n    after 0.3, -> source_2.push 6\n    after 0.4, -> source_1.push 1\n    after 0.5, -> source_1.push 2\n    after 0.6, -> source_1.push 3\n    # after 1.0, -> source_1.push null\n    # after 1.0, -> source_2.push null\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_mux_async_sources = ->\n  mux       = require 'pull-mux'\n  source_1  = new_async_source 's1'\n  source_2  = new_async_source 's2'\n  $demux    = -> PS.map ( [ k, v, ] ) -> v\n  # $demux    = $ ( [ k, v, ], send ) -> send v\n  return new Promise ( resolve ) ->\n    pipeline  = []\n    pipeline.push mux { s1: source_1, s2: source_2, }\n    pipeline.push $demux()\n    pipeline.push PS.$collect()\n    pipeline.push PS.$watch ( d ) -> help '-->', jr d\n    pipeline.push PS.$drain ->\n      help 'ok'\n      resolve null\n    PS.pull pipeline...\n    after 0.1, -> source_2.push 4\n    after 0.5, -> source_1.push 2\n    after 0.6, -> source_1.push 3\n    after 0.2, -> source_2.push 5\n    after 0.3, -> source_2.push 6\n    after 0.4, -> source_1.push 1\n    after 1.0, -> source_1.end()\n    after 1.0, -> source_2.end()\n    return null\n\n############################################################################################################\nunless module.parent?\n  # demo_merge_1()\n  # demo_merge_async_sources()\n  demo_mux_async_sources()\n\n"
  ]
}