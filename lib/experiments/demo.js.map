{
  "version": 3,
  "file": "demo.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/demo.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,EAAA,GAAiB,OAAA,CAAQ,OAAR;;EACjB,CAAA,CAAE,CAAF,CAAA,GAAkB,EAAlB,EAjBA;;;EAqBA,IAAC,CAAA,IAAD,GAAQ,QAAA,CAAA,CAAA;WAAG,IAAI,OAAJ,CAAY,CAAE,OAAF,EAAW,MAAX,CAAA,GAAA;AACtB,UAAA,CAAA,EAAA,GAAA,EAAA,QAAA,EAAA;MAAA,MAAA,GAAW,EAAE,CAAC,eAAH,CAAA;MACX,QAAA,GAAY;MACZ,QAAQ,CAAC,IAAT,CAAc,MAAd;MACA,QAAQ,CAAC,IAAT,CAAc,EAAE,CAAC,KAAH,CAAA,CAAd;MACA,QAAQ,CAAC,IAAT,CAAc,EAAE,CAAC,MAAH,CAAU,CAAA,CAAA,GAAA;QACvB,IAAA,CAAK,IAAL;eACA,OAAA,CAAA;MAFuB,CAAV,CAAd;MAGA,EAAE,CAAC,IAAH,CAAQ,GAAA,QAAR;MACA,KAAW,8BAAX;QACC,MAAM,CAAC,IAAP,CAAY,GAAZ;MADD;MAEA,MAAM,CAAC,GAAP,CAAA;AACA,aAAO;IAZe,CAAZ;EAAH,EArBR;;;EAoCA,IAAO,qBAAP;IACC,CAAA,GAAI;IACD,CAAA,MAAA,QAAA,CAAA,CAAA;aACF,CAAA,MAAM,CAAC,CAAC,IAAF,CAAA,CAAN;IADE,CAAA,CAAH,CAAA,EAFD;;AApCA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/DEMO'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\nPS \t\t\t\t\t\t\t\t\t\t\t\t= require '../..'\n{ $ }\t\t\t\t\t\t\t\t\t\t\t= PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo = -> new Promise ( resolve, reject ) =>\n\tsource \t\t= PS.new_push_source()\n\tpipeline \t= []\n\tpipeline.push source\n\tpipeline.push PS.$show()\n\tpipeline.push PS.$drain =>\n\t\thelp 'ok'\n\t\tresolve()\n\tPS.pull pipeline...\n\tfor idx in [ 1 .. 5 ]\n\t\tsource.send idx\n\tsource.end()\n\treturn null\n\n############################################################################################################\nunless module.parent?\n\tL = @\n\tdo ->\n\t\tawait L.demo()\n\n\n\n\n\n\n"
  ]
}