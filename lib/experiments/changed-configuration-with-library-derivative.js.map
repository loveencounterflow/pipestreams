{
  "version": 3,
  "file": "changed-configuration-with-library-derivative.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/changed-configuration-with-library-derivative.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/DERIVATIVE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\nPS                        = require '../..'\n{ $\n  $async }                = PS\n#...........................................................................................................\n{ jr\n  copy\n  is_empty\n  assign }                = CND\ncreate \t\t\t\t\t\t\t\t\t\t= Object.create\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nabort                     = -> throw new Error 'abort'\n\n\n\n{ key: '~end', }\n{ key: '~collect', }\n{ key: '~recycle',value: {key: 'foo', value: 42, }, }\n\n\n#===========================================================================================================\nprovide_library = ->\n\t@settings = { foo:42, bar: 0, }\n\n\t@add = ( x ) -> x + @settings.foo\n\n#===========================================================================================================\nL1 = {}\nprovide_library.apply L1\nL2 = assign ( Object.create L1 ), { settings: assign {}, L1.settings, { foo: 2, } }\nL3 = assign ( Object.create L1 ), { settings: assign ( Object.create L1.settings ), { foo: 3, } }\nL4 = CND.deep_copy L1\nL4.settings.foo = 4\n\ndebug 'L1         \t', xrpr L1\ndebug 'L1.settings\t', xrpr L1.settings\ndebug 'L1.add     \t', xrpr L1.add\necho()\ndebug 'L2         \t', xrpr L2\ndebug 'L2.settings\t', xrpr L2.settings\ndebug 'L2.add     \t', xrpr L2.add\necho()\ndebug 'L3         \t', xrpr L3\ndebug 'L3.settings\t', xrpr L3.settings\ndebug 'L3.add     \t', xrpr L3.add\necho()\ndebug 'L4         \t', xrpr L4\ndebug 'L4.settings\t', xrpr L4.settings\ndebug 'L4.add     \t', xrpr L4.add\necho()\ndebug 'L1.add 100\t\t', xrpr L1.add 100\ndebug 'L2.add 100\t\t', xrpr L2.add 100\ndebug 'L3.add 100\t\t', xrpr L3.add 100\ndebug 'L4.add 100\t\t', xrpr L4.add 100\n\ndebug ( key for key of L1 ), ( key for key of L1.settings )\ndebug ( key for key of L2 ), ( key for key of L2.settings )\ndebug ( key for key of L3 ), ( key for key of L3.settings )\ndebug ( key for key of L4 ), ( key for key of L4.settings )\n\ninfo ( eq ( Symbol     'x' ), ( Symbol     'x' ) ), ( eq ( Symbol     'x' ), ( Symbol     'y' ) )\ninfo ( eq ( Symbol.for 'x' ), ( Symbol.for 'x' ) ), ( eq ( Symbol.for 'x' ), ( Symbol.for 'y' ) )\ninfo ( eq { key: Symbol.for 'end', }, { key: Symbol.for 'end', } )\ninfo ( eq { key: Symbol.for 'end', }, { key: Symbol.for 'other', } )\ninfo ( eq { key: Symbol     'end', }, { key: Symbol     'end', } )\nd = { key: Symbol.for 'end', }\ninfo d, CND.deep_copy { key: Symbol.for 'end', }\ninfo eq ( Symbol.for 'x' ), CND.deep_copy ( Symbol.for 'x' )\necho()\ninfo L1 is L2\ninfo L1 is L3\ninfo L1 is L4\n\n\n\n\n\n\n"
  ]
}