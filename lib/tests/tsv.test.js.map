{
  "version": 3,
  "file": "tsv.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/tsv.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/TESTS/TSV'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"TSV 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"foo\\tbar\",[['foo','bar']],null]\n    [\" foo \\t bar \",[['foo','bar']],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      R         = []\n      pipeline  = []\n      pipeline.push PS.new_value_source probe\n      # pipeline.push PS.$split()\n      pipeline.push PS.$split_tsv()\n      pipeline.push PS.$collect { collector: R, }\n      pipeline.push PS.$show()\n      pipeline.push PS.$drain -> resolve R\n      PS.pull pipeline...\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"WSV 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"foo bar\",[['foo','bar']],null]\n    [\" foo   bar \",[['foo','bar']],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      R         = []\n      pipeline  = []\n      pipeline.push PS.new_value_source probe\n      # pipeline.push PS.$split()\n      pipeline.push PS.$split_wsv()\n      pipeline.push PS.$collect { collector: R, }\n      pipeline.push PS.$show()\n      pipeline.push PS.$drain -> resolve R\n      PS.pull pipeline...\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"WSV 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"foo bar baz another field\",null],[[\"foo\",\"bar\",\"baz\",\"another\",\"field\"]],null]\n    [[\"foo bar baz another field\",0],[[\"foo\",\"bar\",\"baz\",\"another\",\"field\"]],null]\n    [[\"foo bar baz another field\",1],[['foo bar baz another field']],null]\n    [[\"foo bar baz another field\",2],[['foo','bar baz another field']],null]\n    [[\"foo bar baz another field\",3],[['foo','bar','baz another field']],null]\n    [[\"foo bar baz another field\",4],[['foo','bar','baz', 'another field']],null]\n    [[\"foo bar baz another field\",5],[['foo','bar','baz', 'another', 'field']],null]\n    [[\"foo bar baz another field\",6],[['foo','bar','baz', 'another', 'field',null]],null]\n    [[\"foo bar baz another field\",7],[['foo','bar','baz', 'another', 'field',null,null]],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      [ text, field_count, ]  = probe\n      R                       = []\n      pipeline                = []\n      pipeline.push PS.new_value_source text, field_count\n      # pipeline.push PS.$split()\n      pipeline.push PS.$split_wsv field_count\n      pipeline.push PS.$collect { collector: R, }\n      pipeline.push PS.$show()\n      pipeline.push PS.$drain -> resolve R\n      PS.pull pipeline...\n      return null\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  # test @[ \"selector keypatterns\" ]\n  # test @[ \"TSV 1\" ]\n  test @[ \"WSV 2\" ]\n\n\n"
  ]
}