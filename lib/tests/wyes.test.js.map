{
  "version": 3,
  "file": "wyes.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/wyes.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/TESTS/WYE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n#...........................................................................................................\n{ jr\n  is_empty }              = CND\ndefer                     = setImmediate\n\n# https://pull-stream.github.io/#pull-through\n\n# https://github.com/pull-stream/pull-cont\n# https://github.com/pull-stream/pull-defer\n# https://github.com/scrapjs/pull-imux\n# https://github.com/dominictarr/pull-flow (https://github.com/pull-stream/pull-stream/issues/4)\n\n\n#-----------------------------------------------------------------------------------------------------------\nprovide_$wye = ->\n  mux = require 'pull-mux' ### https://github.com/nichoth/pull-mux ###\n\n  #-----------------------------------------------------------------------------------------------------------\n  @$merge = ( sources... ) ->\n    #.........................................................................................................\n    $_mux = ( sources... ) =>\n      R = {}\n      R[ idx ] = source for source, idx in sources\n      return mux R\n    #.........................................................................................................\n    $_demux = => @$map ( [ k, v, ] ) -> v\n    #.........................................................................................................\n    pipeline  = []\n    pipeline.push $_mux sources...\n    pipeline.push $_demux()\n    return @pull pipeline...\n\n  #-----------------------------------------------------------------------------------------------------------\n  @$wye = ( bysource ) ->\n    send              = null\n    mainstream_ended  = false\n    bystream_started  = false\n    bystream_ended    = false\n    #.........................................................................................................\n    mainstream        = []\n    mainstream.push @$ 'null', ( d, send ) =>\n      mainstream_ended = true unless d?\n      send d\n    mainstream.push @$async ( d, _send, done ) =>\n      send = _send\n      unless bystream_started\n        bystream_started = true\n        @pull bystream...\n      send d\n      done()\n      send 'y'\n      defer => send 'x'\n    mainstream.push @$defer()\n    # mainstream.push @$tee ( d ) => urge '***', d\n    #.........................................................................................................\n    bystream          = []\n    bystream.push @$show()\n    # bystream.push @$ 'null', ( d, _send ) =>\n    #   if d?\n    #     send d\n    #   else\n    #     bystream_ended = true\n    bystream.push @$drain()\n    #.........................................................................................................\n    R                 = @pull mainstream...\n    return R\n\nprovide_$wye.apply PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$merge 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      new Promise ( resolve, reject ) ->\n        R                   = []\n        drainer             = -> resolve R\n        source_1            = PS.new_push_source()\n        source_2            = PS.new_push_source()\n        #...................................................................................................\n        pipeline_1          = []\n        pipeline_1.push source_1\n        pipeline_1.push PS.$watch ( d ) -> whisper '10191-1', d\n        #...................................................................................................\n        pipeline_2          = []\n        pipeline_2.push source_2\n        pipeline_2.push PS.$watch ( d ) -> whisper '10191-2', d\n        #...................................................................................................\n        pipeline_3          = []\n        pipeline_3.push PS.$merge ( PS.pull pipeline_1... ), ( PS.pull pipeline_2... )\n        pipeline_3.push PS.$watch ( d ) -> R.push d\n        pipeline_3.push PS.$watch ( d ) -> urge '10191-3', d\n        pipeline_3.push PS.$drain drainer\n        PS.pull pipeline_3...\n        max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n        for idx in [ 0 .. max_idx ]\n          source_1.push x if ( x = probe[ 0 ][ idx ] )?\n          source_2.push x if ( x = probe[ 1 ][ idx ] )?\n        source_1.end()\n        source_2.end()\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      new Promise ( resolve, reject ) ->\n        R                   = []\n        drainer             = -> resolve R\n        source_1            = PS.new_push_source()\n        source_2            = PS.new_push_source()\n        #...................................................................................................\n        bystream            = []\n        bystream.push source_2\n        bystream.push PS.$watch ( d ) -> whisper '10191-2', d\n        bystream = PS.pull bystream...\n        #...................................................................................................\n        mainstream          = []\n        mainstream.push source_1\n        mainstream.push PS.$watch ( d ) -> whisper '10191-1', d\n        mainstream.push PS.$wye bystream\n        mainstream.push PS.$watch ( d ) -> R.push d\n        mainstream.push PS.$watch ( d ) -> urge '10191-3', d\n        mainstream.push PS.$drain drainer\n        PS.pull mainstream...\n        max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n        for idx in [ 0 .. max_idx ]\n          source_1.push x if ( x = probe[ 0 ][ idx ] )?\n          source_2.push x if ( x = probe[ 1 ][ idx ] )?\n        source_1.end()\n        source_2.end()\n  done()\n  return null\n\n\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  test @[ \"$wye 1\" ]\n\n"
  ]
}