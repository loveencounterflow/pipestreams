{
  "version": 3,
  "file": "wyes.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/wyes.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/TESTS/WYE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n#...........................................................................................................\n\n# https://pull-stream.github.io/#pull-through\n\n# https://github.com/pull-stream/pull-cont\n# https://github.com/pull-stream/pull-defer\n# https://github.com/scrapjs/pull-imux\n# https://github.com/dominictarr/pull-flow (https://github.com/pull-stream/pull-stream/issues/4)\n\n\n#-----------------------------------------------------------------------------------------------------------\nf = ->\n\n  #-----------------------------------------------------------------------------------------------------------\n  @$wye = ( bysource ) ->\n    ### NOTE: what is called (main-, by-) 'stream' here is called 'pipeline' elsewhere. The `mainstream`\n    is really a stream transform, a.k.a. a through stream. ###\n    mainstream_end_sym    = Symbol 'mainstream_end'\n    bystream_end_sym      = Symbol 'bystream_end'\n    mainstream_has_ended  = false\n    # bystream_has_ended    = false\n    bystream_started      = false\n    mainstream            = []\n    bystream              = []\n    mainstream_send       = null\n    bystream_buffer       = []\n    #.........................................................................................................\n    bystream.push bysource\n    bystream.push @$ 'null', ( d, send ) ->\n      d ?= bystream_end_sym\n      if mainstream_send?\n        mainstream_send bystream_buffer.pop() while bystream_buffer.length > 0\n        mainstream_send d\n      else\n        bystream_buffer.unshift d\n      return null\n    bystream.push @$drain()\n    #.........................................................................................................\n    ### TAINT this step is necessary because `PS.$async 'null', $f` is not implemented ###\n    mainstream.push @$ 'null', ( d, send ) ->\n      ### When the first event—data or the end signal—comes down the mainstream, start the bystream: ###\n      unless bystream_started\n        PS.pull bystream...\n        bystream_started = true\n      #.......................................................................................................\n      if d?\n        send d\n      else\n        mainstream_has_ended = true\n        send mainstream_end_sym\n    #.........................................................................................................\n    mainstream.push @$async ( d, send, done ) ->\n      mainstream_send = send\n\n      if d is mainstream_end_sym\n        send null\n        done()\n      else\n        send d\n        done()\n    #.........................................................................................................\n    R = PS.pull mainstream...\n    return R\n\n  # #-----------------------------------------------------------------------------------------------------------\n  # @$wye = ( bysource ) ->\n  #   generator = ->\n  #     loop\n  #       yield d\n  #     return null\n  #   return @pull mainstream...\n\nf.apply PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[['a','b','c'],[1,2,3]],[\"a\",\"b\",\"c\"],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      new Promise ( resolve, reject ) ->\n        R                   = []\n        drainer             = -> resolve R\n        source_1            = PS.new_push_source()\n        source_2            = PS.new_push_source()\n        pipeline_1          = []\n        pipeline_1.push source_1\n        pipeline_1.push PS.$watch ( d ) -> whisper '10191', d\n        pipeline_1.push PS.$wye source_2\n        pipeline_1.push PS.$watch ( d ) -> R.push d\n        pipeline_1.push PS.$watch ( d ) -> urge '10191', d\n        pipeline_1.push PS.$drain drainer\n        PS.pull pipeline_1...\n        source_1.push chr for chr in probe[ 0 ]\n        source_2.push chr for chr in probe[ 1 ]\n        source_1.end()\n  done()\n  return null\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n\n"
  ]
}