{
  "version": 3,
  "file": "wyes.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/wyes.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/TESTS/WYE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n#...........................................................................................................\n{ jr\n  is_empty }              = CND\ndefer                     = setImmediate\n\n# https://pull-stream.github.io/#pull-through\n\n# https://github.com/pull-stream/pull-cont\n# https://github.com/pull-stream/pull-defer\n# https://github.com/scrapjs/pull-imux\n# https://github.com/dominictarr/pull-flow (https://github.com/pull-stream/pull-stream/issues/4)\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$merge 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      new Promise ( resolve, reject ) ->\n        R                   = []\n        drainer             = -> resolve R\n        source_1            = PS.new_push_source()\n        source_2            = PS.new_push_source()\n        #...................................................................................................\n        pipeline_1          = []\n        pipeline_1.push source_1\n        pipeline_1.push PS.$watch ( d ) -> whisper '10191-2', d\n        #...................................................................................................\n        pipeline_2          = []\n        pipeline_2.push source_2\n        pipeline_2.push PS.$watch ( d ) -> whisper '10191-3', d\n        #...................................................................................................\n        pipeline_3          = []\n        pipeline_3.push PS.$merge ( PS.pull pipeline_1... ), ( PS.pull pipeline_2... )\n        pipeline_3.push PS.$watch ( d ) -> R.push d\n        pipeline_3.push PS.$watch ( d ) -> urge '10191-4', d\n        pipeline_3.push PS.$drain drainer\n        PS.pull pipeline_3...\n        max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n        for idx in [ 0 .. max_idx ]\n          source_1.push x if ( x = probe[ 0 ][ idx ] )?\n          source_2.push x if ( x = probe[ 1 ][ idx ] )?\n        source_1.end()\n        source_2.end()\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, ->\n      new Promise ( resolve, reject ) ->\n        R                   = []\n        drainer             = -> resolve R\n        source_1            = PS.new_push_source()\n        source_2            = PS.new_push_source()\n        #...................................................................................................\n        bysource            = []\n        bysource.push source_2\n        bysource.push PS.$watch ( d ) -> whisper '10191-5', 'bysource', jr d\n        # bysource.push PS.$defer()\n        bysource = PS.pull bysource...\n        #...................................................................................................\n        mainstream          = []\n        mainstream.push source_1\n        mainstream.push PS.$watch ( d ) -> whisper '10191-6', 'mainstream', jr d\n        mainstream.push PS.$wye bysource\n        mainstream.push PS.$watch ( d ) -> R.push d\n        mainstream.push PS.$watch ( d ) -> urge CND.white '10191-7', 'confluence', jr d\n        mainstream.push PS.$drain drainer\n        PS.pull mainstream...\n        max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n        for idx in [ 0 .. max_idx ]\n          source_1.push x if ( x = probe[ 0 ][ idx ] )?\n          source_2.push x if ( x = probe[ 1 ][ idx ] )?\n        source_1.end()\n        source_2.end()\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,true,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[false,true,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[false,false,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[true,false,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    matcher = matcher.sort()\n    await T.perform probe, matcher, error, ->\n      return new Promise ( resolve, reject ) ->\n        [ defer_mainstream\n          defer_bystream\n          mainstream_values\n          bystream_values ] = probe\n        R                   = []\n        drainer             = -> R = R.sort(); resolve R\n        mainsource          = PS.new_push_source()\n        bysource            = PS.new_push_source()\n        #...................................................................................................\n        bystream            = []\n        bystream.push bysource\n        bystream.push PS.$watch ( d ) -> whisper '10191-5', 'bysource', jr d\n        bystream.push PS.$defer() if defer_bystream\n        bystream = PS.pull bystream...\n        #...................................................................................................\n        mainstream          = []\n        mainstream.push mainsource\n        mainstream.push PS.$defer() if defer_mainstream\n        mainstream.push PS.$watch ( d ) -> whisper '10191-6', 'mainstream', jr d\n        mainstream.push PS.$wye bystream\n        mainstream.push PS.$watch ( d ) -> R.push d\n        mainstream.push PS.$watch ( d ) -> urge CND.white '10191-7', 'confluence', jr d\n        mainstream.push PS.$drain drainer\n        PS.pull mainstream...\n        max_idx = ( Math.max mainstream_values.length, bystream_values.length ) - 1\n        for idx in [ 0 .. max_idx ]\n          mainsource.push x if ( x = mainstream_values[ idx ] )?\n          bysource.push   x if ( x = bystream_values[   idx ] )?\n        mainsource.end()\n        bysource.end()\n        return null\n  done()\n  return null\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"$wye 1\" ]\n  # test @[ \"$wye 2\" ]\n\n"
  ]
}