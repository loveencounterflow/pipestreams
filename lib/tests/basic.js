// Generated by CoffeeScript 1.12.2
(function() {
  var $, $async, $pull_drain, $take, $values, CND, FS, OS, PATH, PS, TAP, alert, badge, debug, echo, help, info, log, pull, pull_through, rpr, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'PIPESTREAMS/TESTS';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  PATH = require('path');

  FS = require('fs');

  OS = require('os');

  TAP = require('tap');

  PS = require('../..');

  $ = PS.$, $async = PS.$async;

  pull = require('pull-stream');

  $take = require('pull-stream/throughs/take');

  $values = require('pull-stream/sources/values');

  $pull_drain = require('pull-stream/sinks/drain');

  pull_through = require('pull-through');

  TAP.test("remit with end detection", function(T) {
    var pipeline;
    pipeline = [];
    pipeline.push($values(Array.from('abcdef')));
    pipeline.push($('null', function(data, send) {
      if (data != null) {
        send(data);
        return send('*' + data + '*');
      } else {
        return send('ok');
      }
    }));
    pipeline.push(PS.$show());
    pipeline.push($pull_drain());
    PS.pull.apply(PS, pipeline);
    T.pass("ok");
    return T.end();
  });

}).call(this);

//# sourceMappingURL=basic.js.map
