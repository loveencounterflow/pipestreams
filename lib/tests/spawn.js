// Generated by CoffeeScript 2.0.0-beta2
(function() {
  var $, $async, CND, FS, OS, PATH, PS, TAP, alert, badge, debug, echo, help, info, log, rpr, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'PIPESTREAMS/TESTS/TEE';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  PATH = require('path');

  FS = require('fs');

  OS = require('os');

  TAP = require('tap');

  PS = require('../..');

  ({$, $async} = PS);

  TAP.test("spawn 1", function(T) {
    var command, on_error, on_stop, pipeline, source;
    on_error = function(error) {
      return warn('20191', error.message);
    };
    command = 'ls -AlF';
    source = PS.spawn(command, {
      on_error,
      cwd: '/tmp'
    });
    on_stop = PS.new_event_collector('stop', function() {
      return T.end();
    });
    pipeline = [];
    pipeline.push(source);
    pipeline.push(PS.$watch(function(data) {
      return whisper(rpr(data));
    }));
    pipeline.push(PS.$split());
    pipeline.push(PS.$collect());
    pipeline.push(PS.$watch(function(lines) {
      return help(lines);
    }));
    pipeline.push(on_stop.add(PS.$drain()));
    PS.pull(...pipeline);
    return null;
  });

}).call(this);

//# sourceMappingURL=spawn.js.map
