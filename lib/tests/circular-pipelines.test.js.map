{
  "version": 3,
  "file": "circular-pipelines.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/circular-pipelines.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'GENERATOR-AS-SOURCE'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n#...........................................................................................................\nPS                        = require '../..'\n{ $, $async, }            = PS\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"circular pipeline 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,3,4],[3,4,10,2,5,1,16,8,4,2,1],null]\n    [[false,3,4],[3,4,10,2,5,1,16,8,4,2,1],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      #.....................................................................................................\n      [ use_defer, values..., ] = probe\n      buffer                    = [ values..., ]\n      mainsource                = PS.new_refillable_source buffer, { repeat: 1, }\n      collector                 = []\n      mainline                  = []\n      mainline.push mainsource\n      mainline.push PS.$defer() if use_defer\n      mainline.push $ ( d, send ) ->\n        if d > 1\n          if d %% 2 is 0 then buffer.push d / 2\n          else                buffer.push d * 3 + 1\n        send d\n      mainline.push PS.$collect { collector, }\n      mainline.push PS.$drain ->\n        help collector\n        resolve collector\n      PS.pull mainline...\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"circular pipeline 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,3,4],[3,4,10,2,5,1,],null]\n    [[false,3,4],[3,4,10,2,5,1,],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      #.....................................................................................................\n      [ use_defer, values..., ] = probe\n      buffer                    = [ values..., ]\n      mainsource                = PS.new_refillable_source buffer, { repeat: 1, }\n      collector                 = []\n      mainline                  = []\n      mainline.push mainsource\n      mainline.push PS.$defer() if use_defer\n      mainline.push $ ( d, send ) ->\n        return send PS.symbols.end if d is 16\n        if d > 1\n          if d %% 2 is 0 then buffer.push d / 2\n          else                buffer.push d * 3 + 1\n        send d\n      mainline.push PS.$collect { collector, }\n      mainline.push PS.$drain ->\n        help collector\n        resolve collector\n      PS.pull mainline...\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_generator as source 2\" ] = ( T, done ) ->\n  count = 0\n  #.........................................................................................................\n  g = ( max ) ->\n    loop\n      break if count >= max\n      yield ++count\n    return null\n  #.........................................................................................................\n  await T.perform null, [1,2,3,4,null,6,7,8,9,10], ->\n    return new Promise ( resolve ) ->\n      pipeline = []\n      pipeline.push PS.new_generator_source g 10\n      pipeline.push $ ( d, send ) -> send if d is 5 then null else d\n      pipeline.push PS.$show()\n      pipeline.push PS.$collect()\n      pipeline.push PS.$watch ( d ) ->\n        debug '22920', d\n        resolve d\n      pipeline.push PS.$drain()\n      PS.pull pipeline...\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @\n\n"
  ]
}