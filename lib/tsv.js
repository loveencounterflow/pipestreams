// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND;

  //###########################################################################################################
  CND = require('cnd');

  //-----------------------------------------------------------------------------------------------------------
  this.$name_fields = function(names) {
    var type;
    if ((type = CND.type_of(names)) !== 'list') {
      throw new Error(`µ23948 expected a list, got a ${type}`);
    }
    return this._map_errors((fields) => {
      var R, i, idx, len, name, value;
      if ((type = CND.type_of(fields)) !== 'list') {
        throw new Error(`µ24713 expected a list, got a ${type}`);
      }
      R = {};
      for (idx = i = 0, len = fields.length; i < len; idx = ++i) {
        value = fields[idx];
        name = names[idx] != null ? names[idx] : names[idx] = `field_${idx}`;
        R[name] = value;
      }
      return R;
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this.$trim_fields = function() {
    return this.$watch((fields) => {
      var field, i, idx, len, type;
      if ((type = CND.type_of(fields)) !== 'list') {
        throw new Error(`µ24713 expected a list, got a ${type}`);
      }
      for (idx = i = 0, len = fields.length; i < len; idx = ++i) {
        field = fields[idx];
        fields[idx] = field.trim();
      }
      return null;
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this.$split_tsv = function() {
    var R;
    R = [];
    R.push(this.$split());
    R.push(this.$trim());
    R.push(this.$skip_empty());
    R.push(this.$filter(function(line) {
      return !line.startsWith('#');
    }));
    R.push(this.$split_fields());
    // R.push @$trim_fields()
    return this.pull(...R);
  };

}).call(this);

//# sourceMappingURL=tsv.js.map
